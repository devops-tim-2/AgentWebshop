version: "3"

networks:
    apigateway_the_network:
      external: true
services:
    agent:
        build:
          context: .
          dockerfile: Dockerfile
        command: sh -c "sleep 10 && python main.py"
        container_name: agent
        ports:
            - "8085:5000"
        volumes:
            - .:/app
        depends_on:
            - agent_queue
        environment:
            FLASK_ENV: development
            FLASK_RUN_HOST: 0.0.0.0

            DB_TYPE: postgresql
            DB_DRIVER: psycopg2
            DB_USER: test
            DB_PASSWORD: test
            DB_HOST: db
            DB_NAME: main

            TEST_DATABASE_URI: sqlite:///database.db
            DEV_DATABASE_URI: postgresql+psycopg2://test:test@db/main
            SQLALCHEMY_DATABASE_URI: postgresql+psycopg2://test:test@db/main
            RABBITMQ_URI: amqps://qilglokd:nlmVctERVcA7th3VCE1-UL_uij-BCXyj@roedeer.rmq.cloudamqp.com/qilglokd

            KEY: ${KEY}
            JWT_ALGORITHM: ${JWT_ALGORITHM}
            JWT_SECRET: ${JWT_SECRET}
        networks:
            - apigateway_the_network
        depends_on:
            - db

    agent_queue:
        build:
            context: .
            dockerfile: Dockerfile
        command: sh -c "sleep 7 && python -u consume.py"
        depends_on:
            - db
        environment:
            TEST_DATABASE_URI: sqlite:///database.db
            DEV_DATABASE_URI: postgresql+psycopg2://test:test@db/main
            SQLALCHEMY_DATABASE_URI: postgresql+psycopg2://test:test@db/main
            RABBITMQ_URI: amqps://qilglokd:nlmVctERVcA7th3VCE1-UL_uij-BCXyj@roedeer.rmq.cloudamqp.com/qilglokd
    
            DB_TYPE: postgresql
            DB_DRIVER: psycopg2
            DB_USER: test
            DB_PASSWORD: test
            DB_HOST: db
            DB_NAME: main
        networks:
            - apigateway_the_network
    db:
        image: postgres
        container_name: db
        ports: 
            - "54324:5432"
        volumes: 
            - .dbdata:/var/lib/postgresql
        environment:
            POSTGRES_USER: test
            POSTGRES_PASSWORD: test
            POSTGRES_DB: main

        networks:
            - apigateway_the_network